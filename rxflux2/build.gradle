apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group = "com.github.coolfire2015"

/**
 * 读取Git commit number，作为Version Code
 * @return
 */
def gitGitVersionCode() {
    return 'git rev-list HEAD --first-parent --count'.execute().text.trim().toInteger()
}

/**
 * 读取Git Tag，作为Version Name
 * @return
 */
def getGitVersionName() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return "1.0.0"
    }
}

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode gitGitVersionCode()
        versionName getGitVersionName()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    testImplementation "junit:junit:${TEST_VERSION}"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:${ESPRESSO}", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })
    implementation "com.android.support:support-v4:${SUPPORT_VERSION}"

    implementation "io.reactivex.rxjava2:rxjava:${RX_JAVA_2}"
    implementation "io.reactivex.rxjava2:rxandroid:${RX_ANDROID_2}"
}





